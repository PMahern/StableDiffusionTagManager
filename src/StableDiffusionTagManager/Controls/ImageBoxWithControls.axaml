<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Name="ThisControl"
             xmlns:aib="using:UVtools.AvaloniaControls"
             xmlns:conv="using:StableDiffusionTagManager.Converters"
             xmlns:controls="using:StableDiffusionTagManager.Controls"
             xmlns:cp="clr-namespace:ThemeEditor.Controls.ColorPicker;assembly=ThemeEditor.Controls.ColorPicker"
             xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:bitmapExtensions="using:StableDiffusionTagManager.Extensions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="StableDiffusionTagManager.Controls.ImageBoxWithControls">
  <UserControl.Resources>
    <conv:ImageViewerModeToBoolConverter x:Key="modeConverter"/>
    <conv:ColorBrushConverter x:Key="colorConverter"/>
  </UserControl.Resources>
  <Grid DataContext="{Binding ElementName=ThisControl}">
    <DockPanel>
      <Grid Classes="toolbar" DockPanel.Dock="Left">
        <StackPanel Orientation="Vertical" Classes="toolbar" Grid.Column="0" VerticalAlignment="Top">
          <ToggleButton Command="{Binding SetSelectModeCommand}" IsChecked="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Selection}, Mode=OneWay}" ToolTip.Tip="Selection Mode">
            <mi:MaterialIcon Kind="Select" Width="20" Height="20"/>
          </ToggleButton>
          <ToggleButton Command="{Binding SetPaintModeCommand}" IsChecked="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Paint}, Mode=OneWay}" ToolTip.Tip="Paint Mode">
            <mi:MaterialIcon Kind="Brush" Width="20" Height="20"/>
          </ToggleButton>
          <ToggleButton Command="{Binding SetMaskModeCommand}" IsVisible="{Binding ShowMaskModeButton}" IsChecked="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Mask}, Mode=OneWay}" ToolTip.Tip="Mask Mode">
            <mi:MaterialIcon Kind="DominoMask"/>
          </ToggleButton>
          <Button Command="{Binding ExtractComicPanelsCommand}" IsVisible="{Binding ShowExtractComicPanelsButton}" ToolTip.Tip="Extract Comic Panels">
            <mi:MaterialIcon Kind="PhotoLibrary"/>
          </Button>
          <Button Command="{Binding EditImageCommand}" IsVisible="{Binding ShowEditImageButton}" ToolTip.Tip="Touch Up Image">
            <PathIcon Data="{StaticResource image_edit_regular}" />
          </Button>
          <Button Command="{Binding ExpandCommand}" IsVisible="{Binding ShowExpandButton}" ToolTip.Tip="Expand the Image">
            <mi:MaterialIcon Kind="Fullscreen"/>
          </Button>
          <Button Command="{Binding InterrogateCommand}" IsVisible="{Binding ShowInterrogateButton}" ToolTip.Tip="Interrogate SD Webui For Tags">
            <mi:MaterialIcon Kind="Eye"/>
          </Button>
          <Button Command="{Binding RemoveBackgroundCommand}" IsVisible="{Binding ShowRemoveBackgroundButton}" ToolTip.Tip="Remove background using SD Webui">
            <mi:MaterialIcon Kind="RemoveOutline"/>
          </Button>
          <Button Command="{Binding ConvertAlphaCommand}" IsVisible="{Binding ShowConvertAlphaButton}" ToolTip.Tip="Convert image alpha">
            <mi:MaterialIcon Kind="CompareRemove"/>
          </Button>
          <Button Command="{Binding SaveCommand}" IsVisible="{Binding ShowSaveButton}" IsEnabled="{Binding IsPainted, ElementName=ImageBox}" ToolTip.Tip="Save Changes">
            <mi:MaterialIcon Kind="FloppyDisc"/>
          </Button>
        </StackPanel>
      </Grid>
      <Grid Classes="toolbar" DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal"  Classes="toolbar" Grid.Column="1" IsVisible="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Selection}, Mode=OneWay}">
          <Button Command="{Binding CropSelectionToTargetImageSize}" ToolTip.Tip="Crop Selection To Target Size">
            <mi:MaterialIcon Kind="CropSquare" />
          </Button>
          <ComboBox ItemsSource="{Binding Resamplers}" SelectedItem="{Binding SelectedImageResampler, Mode=TwoWay}">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding}"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          <Button Command="{Binding CropSelectionCommand}" ToolTip.Tip="Crop Selection">
            <PathIcon Data="{StaticResource crop_regular}" />
          </Button>
          <Label>x</Label>
          <NumericUpDown Value="{Binding SelectionX, Mode=TwoWay}"/>
          <Label>y</Label>
          <NumericUpDown Value="{Binding SelectionY, Mode=TwoWay}"/>
          <Label>w</Label>
          <NumericUpDown Value="{Binding SelectionWidth, Mode=TwoWay}"/>
          <Label>h</Label>
          <NumericUpDown Value="{Binding SelectionHeight, Mode=TwoWay}"/>
          <ComboBox ItemsSource="{Binding ImageAspectRatioSets}" SelectedItem="{Binding SelectedImageAspectRatioSet, Mode=TwoWay}">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Name}"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          <ToggleButton IsChecked="{Binding IsAspectRatioLocked}">
            <PathIcon Data="{StaticResource lock_regular}" />
          </ToggleButton>
        </StackPanel>
        <StackPanel  IsVisible="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Paint}, Mode=OneWay}" Orientation="Horizontal" Classes="toolbar" Grid.Column="2">
          <ComboBox ItemsSource="{Binding BrushSizes}" SelectedItem="{Binding SelectedBrushSize}" ToolTip.Tip="Brush Size">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <ComboBoxItem Content="{Binding}" Padding="0"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          <Button Command="{Binding ChoosePaintColorCommand}" Background="{Binding PaintBrushColor, Converter={StaticResource ResourceKey=colorConverter}}" ToolTip.Tip="Brush Color"/>
          <Button Command="{Binding ToggleEyeDropperCommand}" ToolTip.Tip="Get Color from Pixel">
            <mi:MaterialIcon Kind="Eyedropper"/>
          </Button>
          <Button Command="{Binding UndoLastPaintCommand}" ToolTip.Tip="Undo Paint Layer">
            <PathIcon Data="{StaticResource arrow_undo_regular}" />
          </Button>
        </StackPanel>
        <StackPanel  IsVisible="{Binding CurrentMode, Converter={StaticResource ResourceKey=modeConverter}, ConverterParameter={x:Static controls:ImageViewerMode.Mask}, Mode=OneWay}" Orientation="Horizontal" Classes="toolbar" Grid.Column="2">
          <ContentControl Name="AdditionalMaskButtons" Content="{Binding AdditionalMaskButtonsContent}"/>
          <Button Command="{Binding ChooseMaskColorCommand}" Background="{Binding MaskColor, Converter={StaticResource ResourceKey=colorConverter}}" ToolTip.Tip="Brush Color"/>
          <ComboBox ItemsSource="{Binding BrushSizes}" SelectedItem="{Binding SelectedMaskSize}"  ToolTip.Tip="Mask Brush Size">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <ComboBoxItem Content="{Binding}" Padding="0"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          <Button Command="{Binding UndoLastMaskCommand}" ToolTip.Tip="Undo Last Mask Layer">
            <PathIcon Data="{StaticResource arrow_undo_regular}" />
          </Button>
        </StackPanel>
      </Grid>
      <aib:AdvancedImageBox Name="ImageBox"
                                    Image="{Binding Image}"
                                    SelectionMode="{Binding ImageBoxSelectionMode}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    PanWithMouseButtons="RightButton"
                                    SelectWithMouseButtons="{Binding SelectWithMouseButtons}"
                                    PaintWithMouseButtons="{Binding PaintWithMouseButtons}"
                                    MaskWithMouseButtons="{Binding MaskWithMouseButtons}"
                                    EyeDropWithMouseButtons="{Binding EyeDropWithMouseButtons}"
                                    PaintBrushSize="{Binding SelectedBrushSize}"
                                    MaskBrushSize="{Binding SelectedMaskSize}"
                                    PaintBrushColor="{Binding PaintBrushColor, Mode=TwoWay}"
                                    MaskColor="{Binding MaskColor, Mode=TwoWay}"
                                    SelectionRegion="{Binding SelectionRegion, Mode=TwoWay}"
                                    IsAspectRatioLocked="{Binding IsAspectRatioLocked, Mode=TwoWay}"
                                    SelectedImageAspectRatioSet="{Binding SelectedImageAspectRatioSet}"
                                />
    </DockPanel>
    <Border IsVisible="{Binding IsChoosingPaintColor}" Background="#40000000">
      <controls:HeaderControl Title="Select Paint Color" CloseCommand="{Binding ClosePaintColorSelectorCommand}" Height="450" Width="400">
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <cp:ColorPicker IsVisible="{Binding IsChoosingPaintColor}" Color="{Binding PaintBrushColor, Mode=TwoWay}" />
        </Border>
      </controls:HeaderControl>
    </Border>
    <Border IsVisible="{Binding IsChoosingMaskColor}" Background="#40000000">
      <controls:HeaderControl Title="Select Mask Color" CloseCommand="{Binding CloseMaskColorSelectorCommand}" Height="450" Width="400">
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <cp:ColorPicker IsVisible="{Binding IsChoosingMaskColor}" Color="{Binding MaskColor, Mode=TwoWay}" />
        </Border>
      </controls:HeaderControl>
    </Border>
  </Grid>
</UserControl>
